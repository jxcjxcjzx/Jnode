<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
 
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <title>[Hadoop源码解读]（二）MapReduce篇之Mapper类 - 苏格拉底的毒堇汁
        - 博客频道 - CSDN.NET</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="description" content="前面在讲InputFormat的时候，讲到了Mapper类是如何利用RecordReader来读取InputSplit中的K-V对的。&#160; 这一篇里，开始对Mapper.class的子类进行解读。&#160; 先回忆一下。Mapper有setup()，map()，cleanup()和run()四个方法。其中setup()一般是用来进行一些map()前的准备工作，map()则一般承担主要的处理工" />
    <script src="http://static.blog.csdn.net/scripts/jquery.js" type="text/javascript"></script>
    <script type="text/javascript" src="http://static.blog.csdn.net/scripts/ad.js?v=1.1"></script>
        <!--new top-->
               <link rel="stylesheet" href="http://static.csdn.net/public/common/toolbar/css/index.css">        <!--new top-->

    <link rel="Stylesheet" type="text/css" href="http://static.blog.csdn.net/skin/dark1/css/style.css?v=1.1" />
    <link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="/posa88/rss/list" />
    <link rel="shortcut icon" href="/favicon.ico" />
    <link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/blue_green.css" />
 

</head>
<body>
    
   
      <!--new top-->
    <script id="toolbar-tpl-scriptId" fixed="true" prod="blog" skin="black" src="http://static.csdn.net/public/common/toolbar/js/html.js" type="text/javascript"></script>
     <!--new top-->
    <div id="container">
        <div id="header">
    <div class="header">
        <div id="blog_title">
            <h2>
                <a href="http://blog.csdn.net/posa88">苏格拉底的毒堇汁</a></h2>
            <h3>我非常清楚地知道，我并没有智慧，不论大的还是小的都没有。</h3>
            <div class="clear">
            </div>
        </div>
        <div class="clear">
        </div>
    </div>
</div>
<div id="navigator">
    <div class="navigator_bg">
    </div>
    <div class="navigator">
        <ul>
                <li id="btnContents"><a href="http://blog.csdn.net/posa88?viewmode=contents"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_mulu'])">
                    <img src="http://static.blog.csdn.net/images/ico_list.gif">目录视图</span></a></li>
                <li id="btnView"><a href="http://blog.csdn.net/posa88?viewmode=list"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_zhaiyao'])">
                    <img src="http://static.blog.csdn.net/images/ico_summary.gif">摘要视图</span></a></li>
                <li id="btnRss"><a href="http://blog.csdn.net/posa88/rss/list"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_RSS'])">
                    <img src="http://static.blog.csdn.net/images/ico_rss.gif">订阅</span></a></li>
</ul>
    </div>
</div>
<script type="text/javascript">
    var username = "posa88";
    var _blogger = username;
    var blog_address = "http://blog.csdn.net/posa88";
    var static_host = "http://static.blog.csdn.net";
    var currentUserName = "";
</script>

        <div id="body">
            <div id="main">
                <div class="main">
<div class="notice tracking-ad" data-mod='popu_3' > 


<a href="http://bbs.csdn.net/topics/390708348" target="_blank"><font color=red>【大声说出你的爱】CSDN社区情人节特别活动
</font></a>

&nbsp;&nbsp;&nbsp;&nbsp;


<a href="http://www.csdn.net/article/2014-02-11/2818358"target="_blank">
<font color=red>专访李云：从通讯行业的架构师到互联网“新兵”</font></a>
&nbsp;&nbsp;&nbsp;&nbsp;


<a href="http://bbs.csdn.net/topics/390708540"target="_blank">
<font color=blue>电子版《程序员》杂志免费领</font></a>




</div>                    <link href="http://static.blog.csdn.net/css/comment1.css" type="text/css" rel="stylesheet" />
<link href="http://static.blog.csdn.net/css/style1.css" type="text/css" rel="stylesheet" />
<div id="article_details" class="details">
    <div class="article_title">
    <span class="ico ico_type_Original"></span>
    <h1>
        <span class="link_title"><a href="/posa88/article/details/7901304">
        [Hadoop源码解读]（二）MapReduce篇之Mapper类
        </a></span>
    </h1>
</div>

    <div class="article_manage">
        <span class="link_categories">
        分类：
            <a href="/posa88/article/category/1220695">Hadoop源码解读</a> 
        </span>
    <span class="link_postdate">2012-08-24 00:50</span>
    <span class="link_view" title="阅读次数">7163人阅读</span>
    <span class="link_comments" title="评论次数"><a href="#comments" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_pinglun'])">评论</a>(4)</span>
    <span class="link_collect"><a href="javascript:void(0);" onclick="javascript:_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_shoucang']);collectArticle('[Hadoop源码解读]（二）MapReduce篇之Mapper类','7901304');return false;" title="收藏">收藏</a></span>
    <span class="link_report"><a href="#report"  onclick="javascript:_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_jubao']);report(7901304,2);return false;" title="举报">举报</a></span>
    
</div>

    
<div id="article_content" class="article_content">

<p>&nbsp; 前面在讲InputFormat的时候，讲到了Mapper类是如何利用RecordReader来读取InputSplit中的K-V对的。</p>
<p>&nbsp; 这一篇里，开始对Mapper.class的子类进行解读。</p>
<p><img src="http://my.csdn.net/uploads/201208/23/1345731174_8381.png" alt=""><br>
</p>
<p>&nbsp; 先回忆一下。Mapper有setup()，map()，cleanup()和run()四个方法。其中setup()一般是用来进行一些map()前的准备工作，map()则一般承担主要的处理工作，cleanup()则是收尾工作如关闭文件或者执行map()后的K-V分发等。run()方法提供了setup-&gt;map-&gt;cleanup()的执行模板。</p>
<p>&nbsp; 在MapReduce中，Mapper从一个输入分片中读取数据，然后经过Shuffle and Sort阶段，分发数据给Reducer，在Map端和Reduce端我们可能使用设置的Combiner进行合并，这在Reduce前进行。Partitioner控制每个K-V对应该被分发到哪个reducer[我们的Job可能有多个reducer]，Hadoop默认使用HashPartitioner，HashPartitioner使用key的hashCode对reducer的数量取模得来。</p>
<p><pre name="code" class="java">  public void run(Context context) throws IOException, InterruptedException {
    setup(context);
    while (context.nextKeyValue()) {
      map(context.getCurrentKey(), context.getCurrentValue(), context);
    }
    cleanup(context);
  }</pre>从上面run方法可以看出，K/V对是从传入的Context获取的。我们也可以从下面的map方法看出，输出结果K/V对也是通过Context来完成的。至于Context暂且放着。</p>
<p><pre name="code" class="java">  @SuppressWarnings(&quot;unchecked&quot;)
  protected void map(KEYIN key, VALUEIN value, 
                     Context context) throws IOException, InterruptedException {
    context.write((KEYOUT) key, (VALUEOUT) value);
  }&nbsp;</pre></p>
<p><br>
</p>
<p>&nbsp;我们先来看看三个Mapper的子类，它们位于src\mapred\org\apache\hadoop\mapreduce\lib\map中。</p>
<p>&nbsp; 1、TokenCounterMapper</p>
<p>&nbsp;</p>
<pre name="code" class="html">public class TokenCounterMapper extends Mapper&lt;Object, Text, Text, IntWritable&gt;{
    
  private final static IntWritable one = new IntWritable(1);
  private Text word = new Text();
  
  @Override
  public void map(Object key, Text value, Context context
                  ) throws IOException, InterruptedException {
    StringTokenizer itr = new StringTokenizer(value.toString());
    while (itr.hasMoreTokens()) {
      word.set(itr.nextToken());
      context.write(word, one);
    }
  }
}</pre><br>
&nbsp; 我们看到，对于一个输入的K-V对，它使用StringTokenizer来获取value中的tokens，然后对每一个token，分发出一个&lt;token,one&gt;对，这将在reduce端被收集，同一个token对应的K-V对都会被收集到同一个reducer上，这样我们就可以计算出所有mapper分发出来的以某个token为key的&lt;token,one&gt;的数量，然后只要在reduce函数中加起来，就得到了token的计数。这就是为什么这个类叫做TokenCounterMapper的原因。
<p></p>
<p>&nbsp; &nbsp;在MapReduce的“Hello world”：WordCount例子中，我们完全可以直接使用这个TokenCounterMapper作为MapperClass，仅需用job.setMapperClass(TokenCounterMapper.class)进行设置即可。</p>
<p><br>
</p>
<p>&nbsp; 2、InverseMapper</p>
<p></p>
<pre name="code" class="html">  public class InverseMapper&lt;K, V&gt; extends Mapper&lt;K,V,V,K&gt; {


  /** The inverse function.  Input keys and values are swapped.*/
  @Override
  public void map(K key, V value, Context context
                  ) throws IOException, InterruptedException {
    context.write(value, key);
  }
  
}</pre><br>
&nbsp; 这个类更加简单，它紧紧是调换Key和Value，然后直接分发出去。举个例子：数据&#26684;式是&lt;某商家,某商品&gt;，我们既可能需要计算一个商家对应的所有商品种类，也可能需要计算某个商品的销售商家数量，后者的情形，就可以使用InverseMapper来达到目的，使得相同商品被分发到相同reducer。
<p></p>
<p>&nbsp;</p>
<p>&nbsp; 3、MultithreadedMapper</p>
<p>&nbsp; 这个类稍微有点复杂，它是使用多线程来执行一个Mapper。我们可以从类图中看到，它有一个mapClass属性，这个属性指定另一个Mapper类[暂称workMapper，由mapred.map.multithreadedrunner.class设置]，实际干活的其实是这个Mapper类而不是MultithreadedMapper。runnsers是运行的线程的列表。</p>
<p>&nbsp; 下面是MultithreadedMapper的run()方法，它重写了Mapper中的run()。</p>
<p></p>
<pre name="code" class="html">  public void run(Context context) throws IOException, InterruptedException {
    outer = context;
    int numberOfThreads = getNumberOfThreads(context);
    mapClass = getMapperClass(context);
    if (LOG.isDebugEnabled()) {
      LOG.debug(&quot;Configuring multithread runner to use &quot; + numberOfThreads + 
                &quot; threads&quot;);
    }
    
    runners =  new ArrayList&lt;MapRunner&gt;(numberOfThreads);
    for(int i=0; i &lt; numberOfThreads; ++i) {
      MapRunner thread = new MapRunner(context);
      thread.start();
      runners.add(i, thread);
    }
    for(int i=0; i &lt; numberOfThreads; ++i) {
      MapRunner thread = runners.get(i);
      thread.join();
      Throwable th = thread.throwable;
      if (th != null) {
        if (th instanceof IOException) {
          throw (IOException) th;
        } else if (th instanceof InterruptedException) {
          throw (InterruptedException) th;
        } else {
          throw new RuntimeException(th);
        }
      }
    }
  }
</pre><br>
&nbsp; 从上面的代码我们可以看到，首先它设置运行上下文context和workMapper，然后启动多个MapRunner子线程[由mapred.map.multithreadedrunner.threads设置]，然后使用join()等待子线程都执行完毕。
<p></p>
<p>&nbsp; MapRunner继承了Thread，它包含了一个独享的Context：subcontext，以及用mapper指定了workMapper，然后throwable是在MultithreadMapper的run()中进行综合的异常处理的。</p>
<p></p>
<pre name="code" class="html">  private class MapRunner extends Thread {
    private Mapper&lt;K1,V1,K2,V2&gt; mapper;
    private Context subcontext;
    private Throwable throwable;

    MapRunner(Context context) throws IOException, InterruptedException {
      mapper = ReflectionUtils.newInstance(mapClass, 
                                           context.getConfiguration());
      subcontext = new Context(outer.getConfiguration(), 
                            outer.getTaskAttemptID(),
                            new SubMapRecordReader(),
                            new SubMapRecordWriter(), 
                            context.getOutputCommitter(),
                            new SubMapStatusReporter(),
                            outer.getInputSplit());
    }

    public Throwable getThrowable() {
      return throwable;
    }

    @Override
    public void run() {
      try {
        mapper.run(subcontext);
      } catch (Throwable ie) {
        throwable = ie;
      }
    }
  }
</pre>&nbsp; 在MapRunner的Constructor中我们看见，MapRunner所包含的subcontext中使用了独立的RecordReader、RecordWriter和StatusReporter，它们分别是SubMapRecordReader、SubMapRecordWriter和SubMapStatusReporter，我们就不分析了。&#20540;得注意的是，SubMapRecordReader在读K-V对和SubMapRecordWriter在写K-V对的时候都要同步。这是通过互斥访问MultithreadedMapper的上下文outer来实现的。
<p></p>
<p>&nbsp; MultithreadedMapper适用于CPU密集型的任务，采用多个线程处理后，一个线程可以在另外的线程在执行时读取数据并执行，这样就使用了更多的CPU周期来执行任务，从而提高吞吐率。注意读写操作都是线程安全的，因此不难想象对于IO密集型的作业，采用MultithreadedMapper会适得其反，因为会有多个线程等待IO，IO成为限制吞吐率的关键。对于IO密集型的任务，我们应该采用增多task数量的方法来解决，因为这样在IO上就是并行的。</p>
<p>&nbsp; 除非map()的确是CPU密集型的，否则不推荐使用MultithreadedMapper，而建议采用更多的map task。</p>
<p><br>
</p>

</div>



<!-- Baidu Button BEGIN -->
<div id="bdshare" class="bdshare_t bds_tools get-codes-bdshare" style="float: right;">
<a class="bds_qzone"></a>
<a class="bds_tsina"></a>
<a class="bds_tqq"></a>
<a class="bds_renren"></a>
<a class="bds_t163"></a>
<span class="bds_more">更多</span>
<a class="shareCount"></a>
</div>
<!-- Baidu Button END -->


<!--192.168.100.34-->
<div class="article_next_prev">
            <li class="prev_article"><span>上一篇：</span><a href="/posa88/article/details/7897963" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_shangyipian'])">[Hadoop源码解读]（一）MapReduce篇之InputFormat</a></li>
            <li class="next_article"><span>下一篇：</span><a href="/posa88/article/details/7902709" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_xiayipian'])">[Hadoop源码解读]（三）MapReduce篇之Job类</a></li>
</div>

<!-- Baidu Button BEGIN -->
<script type="text/javascript" id="bdshare_js" data="type=tools&amp;uid=1536434" ></script>
<script type="text/javascript" id="bdshell_js"></script>
<script type="text/javascript">
    document.getElementById("bdshell_js").src = "http://bdimg.share.baidu.com/static/js/shell_v2.js?cdnversion=" + Math.ceil(new Date()/3600000)
</script>
<!-- Baidu Button END -->

        <div id="digg" ArticleId="7901304">
            <dl id="btnDigg" class="digg digg_disable">
                <dt onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_ding'])">顶</dt>
                <dd>6</dd>
            </dl>
            <dl id="btnBury" class="digg digg_disable">
                <dt onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_cai'])">踩</dt>
                <dd>2</dd>
            </dl>
        </div>
</div>
    <div id="ad_cen">
        <script type="text/javascript">            BAIDU_CLB_SLOT_ID = "117306";</script>
        <script type="text/javascript" src="http://cbjs.baidu.com/js/o.js"></script>
    </div>
    <script type="text/javascript">
        //new Ad(4, 'ad_cen');
    </script>
<div id="comment_title" class="panel_head">
    查看评论<a name="comments"></a></div>
<div id="comment_list">
</div>
<div id="comment_bar">
</div>
<div id="comment_form">
</div>
<div class="announce">
    * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场<a name="reply"></a><a name="quote"></a></div>
<script type="text/javascript">
    var fileName = '7901304';
    var commentscount = 4;
    var islock = false
</script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/comment.js"></script>
    <div id="ad_bot">
    </div>
    <script type="text/javascript">
    new Ad(5, 'ad_bot');
    </script>
<div id="report_dialog">
</div>
<div id="d-top" style="display: none;">
    <a id="d-top-a" href="#" title="回到顶部" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_huidaodingbu'])">
        <img src="http://static.blog.csdn.net/images/top.png" alt="TOP" /></a>
</div>
<script type="text/javascript">
    $(function ()
    {
        var d_top = $('#d-top');
        document.onscroll = function ()
        {
            var scrTop = (document.body.scrollTop || document.documentElement.scrollTop);
            if (scrTop > 500)
            {
                d_top.show();
            } else
            {
                d_top.hide();
            }
        }
        $('#d-top-a').click(function ()
        {
            scrollTo(0, 0);
            this.blur();
            return false;
        });
    });
  
</script>
<style type="text/css">
    .tag_list
    {
        background: none repeat scroll 0 0 #FFFFFF;
        border: 1px solid #D7CBC1;
        color: #000000;
        font-size: 12px;
        line-height: 20px;
        list-style: none outside none;
        margin: 10px 2% 0 1%;
        padding: 1px;
    }
    .tag_list h5
    {
        background: none repeat scroll 0 0 #E0DBD3;
        color: #47381C;
        font-size: 12px;
        height: 24px;
        line-height: 24px;
        padding: 0 5px;
        margin: 0;
    }
    .tag_list h5 a
    {
        color: #47381C;
    }
    .classify
    {
        margin: 10px 0;
        padding: 4px 12px 8px;
    }
    .classify a
    {
        margin-right: 20px;
        white-space: nowrap;
    }
</style>
<div class="tag_list">
    <h5>
        <a href="http://www.csdn.net/tag/" target="_blank">核心技术类目</a></h5>
    <div class="classify">
<a title="全部主题" href="http://www.csdn.net/tag" target="_blank" onclick="LogClickCount(this,336);">全部主题</a>
<a title="Java" href="http://www.csdn.net/tag/Java" target="_blank" onclick="LogClickCount(this,336);">Java</a>
<a title="VPN" href="http://www.csdn.net/tag/vpn" target="_blank" onclick="LogClickCount(this,336);">VPN</a>
<a title="Android" href="http://www.csdn.net/tag/android" target="_blank" onclick="LogClickCount(this,336);">Android</a>
<a title="iOS" href="http://www.csdn.net/tag/ios" target="_blank" onclick="LogClickCount(this,336);">iOS</a>
<a title="ERP" href="http://www.csdn.net/tag/erp" target="_blank" onclick="LogClickCount(this,336);">ERP</a>
<a title="IE10" href="http://www.csdn.net/tag/ie10" target="_blank" onclick="LogClickCount(this,336);">IE10</a>
<a title="Eclipse" href="http://www.csdn.net/tag/eclipse" target="_blank" onclick="LogClickCount(this,336);">Eclipse</a>
<a title="CRM" href="http://www.csdn.net/tag/crm" target="_blank" onclick="LogClickCount(this,336);">CRM</a>
<a title="JavaScript" href="http://www.csdn.net/tag/javascript" target="_blank" onclick="LogClickCount(this,336);">JavaScript</a>
<a title="Ubuntu" href="http://www.csdn.net/tag/ubuntu" target="_blank" onclick="LogClickCount(this,336);">Ubuntu</a>
<a title="NFC" href="http://www.csdn.net/tag/nfc" target="_blank" onclick="LogClickCount(this,336);">NFC</a>
<a title="WAP" href="http://www.csdn.net/tag/wap" target="_blank" onclick="LogClickCount(this,336);">WAP</a>
<a title="jQuery" href="http://www.csdn.net/tag/jquery" target="_blank" onclick="LogClickCount(this,336);">jQuery</a>
<a title="数据库" href="http://www.csdn.net/tag/数据库" target="_blank" onclick="LogClickCount(this,336);">数据库</a>
<a title="BI" href="http://www.csdn.net/tag/bi" target="_blank" onclick="LogClickCount(this,336);">BI</a>
<a title="HTML5" href="http://www.csdn.net/tag/html5" target="_blank" onclick="LogClickCount(this,336);">HTML5</a>
<a title="Spring" href="http://www.csdn.net/tag/spring" target="_blank" onclick="LogClickCount(this,336);">Spring</a>
<a title="Apache" href="http://www.csdn.net/tag/apache" target="_blank" onclick="LogClickCount(this,336);">Apache</a>
<a title="Hadoop" href="http://www.csdn.net/tag/hadoop" target="_blank" onclick="LogClickCount(this,336);">Hadoop</a>
<a title=".NET" href="http://www.csdn.net/tag/.net" target="_blank" onclick="LogClickCount(this,336);">.NET</a>
<a title="API" href="http://www.csdn.net/tag/api" target="_blank" onclick="LogClickCount(this,336);">API</a>
<a title="HTML" href="http://www.csdn.net/tag/html" target="_blank" onclick="LogClickCount(this,336);">HTML</a>
<a title="SDK" href="http://www.csdn.net/tag/sdk" target="_blank" onclick="LogClickCount(this,336);">SDK</a>
<a title="IIS" href="http://www.csdn.net/tag/iis" target="_blank" onclick="LogClickCount(this,336);">IIS</a>
<a title="Fedora" href="http://www.csdn.net/tag/fedora" target="_blank" onclick="LogClickCount(this,336);">Fedora</a>
<a title="XML" href="http://www.csdn.net/tag/xml" target="_blank" onclick="LogClickCount(this,336);">XML</a>
<a title="LBS" href="http://www.csdn.net/tag/lbs" target="_blank" onclick="LogClickCount(this,336);">LBS</a>
<a title="Unity" href="http://www.csdn.net/tag/unity" target="_blank" onclick="LogClickCount(this,336);">Unity</a>
<a title="Splashtop" href="http://www.csdn.net/tag/splashtop" target="_blank" onclick="LogClickCount(this,336);">Splashtop</a>
<a title="UML" href="http://www.csdn.net/tag/uml" target="_blank" onclick="LogClickCount(this,336);">UML</a>
<a title="components" href="http://www.csdn.net/tag/components" target="_blank" onclick="LogClickCount(this,336);">components</a>
<a title="Windows Mobile" href="http://www.csdn.net/tag/windowsmobile" target="_blank" onclick="LogClickCount(this,336);">Windows Mobile</a>
<a title="Rails" href="http://www.csdn.net/tag/rails" target="_blank" onclick="LogClickCount(this,336);">Rails</a>
<a title="QEMU" href="http://www.csdn.net/tag/qemu" target="_blank" onclick="LogClickCount(this,336);">QEMU</a>
<a title="KDE" href="http://www.csdn.net/tag/kde" target="_blank" onclick="LogClickCount(this,336);">KDE</a>
<a title="Cassandra" href="http://www.csdn.net/tag/cassandra" target="_blank" onclick="LogClickCount(this,336);">Cassandra</a>
<a title="CloudStack" href="http://www.csdn.net/tag/cloudstack" target="_blank" onclick="LogClickCount(this,336);">CloudStack</a>
<a title="FTC" href="http://www.csdn.net/tag/ftc" target="_blank" onclick="LogClickCount(this,336);">FTC</a>
<a title="coremail" href="http://www.csdn.net/tag/coremail" target="_blank" onclick="LogClickCount(this,336);">coremail</a>
<a title="OPhone " href="http://www.csdn.net/tag/ophone " target="_blank" onclick="LogClickCount(this,336);">OPhone </a>
<a title="CouchBase" href="http://www.csdn.net/tag/couchbase" target="_blank" onclick="LogClickCount(this,336);">CouchBase</a>
<a title="云计算" href="http://www.csdn.net/tag/云计算" target="_blank" onclick="LogClickCount(this,336);">云计算</a>
<a title="iOS6" href="http://www.csdn.net/tag/iOS6" target="_blank" onclick="LogClickCount(this,336);">iOS6</a>
<a title="Rackspace " href="http://www.csdn.net/tag/rackspace " target="_blank" onclick="LogClickCount(this,336);">Rackspace </a>
<a title="Web App" href="http://www.csdn.net/tag/webapp" target="_blank" onclick="LogClickCount(this,336);">Web App</a>
<a title="SpringSide" href="http://www.csdn.net/tag/springside" target="_blank" onclick="LogClickCount(this,336);">SpringSide</a>
<a title="Maemo" href="http://www.csdn.net/tag/maemo" target="_blank" onclick="LogClickCount(this,336);">Maemo</a>
<a title="Compuware" href="http://www.csdn.net/tag/compuware" target="_blank" onclick="LogClickCount(this,336);">Compuware</a>
<a title="大数据" href="http://www.csdn.net/tag/大数据" target="_blank" onclick="LogClickCount(this,336);">大数据</a>
<a title="aptech" href="http://www.csdn.net/tag/aptech" target="_blank" onclick="LogClickCount(this,336);">aptech</a>
<a title="Perl" href="http://www.csdn.net/tag/perl" target="_blank" onclick="LogClickCount(this,336);">Perl</a>
<a title="Tornado" href="http://www.csdn.net/tag/tornado" target="_blank" onclick="LogClickCount(this,336);">Tornado</a>
<a title="Ruby" href="http://www.csdn.net/tag/ruby" target="_blank" onclick="LogClickCount(this,336);">Ruby</a>
<a title="Hibernate" href="http://www.csdn.net/hibernate" target="_blank" onclick="LogClickCount(this,336);">Hibernate</a>
<a title="ThinkPHP" href="http://www.csdn.net/tag/thinkphp" target="_blank" onclick="LogClickCount(this,336);">ThinkPHP</a>
<a title="Spark" href="http://www.csdn.net/tag/spark" target="_blank" onclick="LogClickCount(this,336);">Spark</a>
<a title="HBase" href="http://www.csdn.net/tag/hbase" target="_blank" onclick="LogClickCount(this,336);">HBase</a>
<a title="Pure" href="http://www.csdn.net/tag/pure" target="_blank" onclick="LogClickCount(this,336);">Pure</a>
<a title="Solr" href="http://www.csdn.net/tag/solr" target="_blank" onclick="LogClickCount(this,336);">Solr</a>
<a title="Angular" href="http://www.csdn.net/tag/angular" target="_blank" onclick="LogClickCount(this,336);">Angular</a>
<a title="Cloud Foundry" href="http://www.csdn.net/tag/cloudfoundry" target="_blank" onclick="LogClickCount(this,336);">Cloud Foundry</a>
<a title="Redis" href="http://www.csdn.net/tag/redis" target="_blank" onclick="LogClickCount(this,336);">Redis</a>
<a title="Scala" href="http://www.csdn.net/tag/scala" target="_blank" onclick="LogClickCount(this,336);">Scala</a>
<a title="Django" href="http://www.csdn.net/tag/django" target="_blank" onclick="LogClickCount(this,336);">Django</a>
<a title="Bootstrap" href="http://www.csdn.net/tag/bootstrap" target="_blank" onclick="LogClickCount(this,336);">Bootstrap</a>
    </div>
</div>

                    <div class="clear">
                    </div>
                </div>
            </div>
            <div id="side">
    <div class="side">
<div id="panel_Profile" class="panel">
<ul class="panel_head"><span>个人资料</span></ul>
<ul class="panel_body profile">
<div id="blog_userface">
    <a href="http://my.csdn.net/posa88" target="_blank">
    <img src="http://avatar.csdn.net/A/8/D/1_posa88.jpg" title="访问我的空间" style="max-width:90%"/>
    </a>
    <br />
    <span><a href="http://my.csdn.net/posa88" class="user_name" target="_blank">posa88</a></span>
</div>
<div class="interact">
<a href="javascript:void(0);" class="attent" id="span_add_follow" title="[加关注]" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_guanzhu'])"></a>
<a href="javascript:void(0);" class="letter" onclick="loginto(1)" title="[发私信]" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_sixin'])"></a>
</div>
<div id="blog_medal">
</div>
<ul id="blog_rank">
    <li>访问：<span>36702次</span></li>
    <li>积分：<span>619分</span></li>
    <li>排名：<span>千里之外</span></li>
</ul>
<ul id="blog_statistics">
    <li>原创：<span>23篇</span></li>
    <li>转载：<span>0篇</span></li>
    <li>译文：<span>0篇</span></li>
    <li>评论：<span>23条</span></li>
</ul>
</ul>
</div>


<div class="panel" id="panel_Search">
    <ul class="panel_head"><span>文章搜索</span></ul>
    <ul class="panel_body">
        <form id="frmSearch" action="http://so.csdn.net/search" class="form_search" target="_blank">
        <span><input id="inputSearch" type="text" class="blogsearch" title="请输入关键字" /></span>
        <input id="btnSubmit" type="submit" value="搜索" title="search in blog" />
        <input type="hidden" name="q" id="inputQ" />
        <input type="hidden" name="t" value="blog" />
        <a id="btnSearchBlog" target="_blank"></a>
        </form>
    </ul>
</div><div id="panel_Category" class="panel">
<ul class="panel_head"><span>文章分类</span></ul>
<ul class="panel_body">
<li>
<a href="http://blog.csdn.net/posa88/article/category/1191720">Hadoop BASIC</a><span>(11)</span>
</li>
<li>
<a href="http://blog.csdn.net/posa88/article/category/1216173">Nutch</a><span>(1)</span>
</li>
<li>
<a href="http://blog.csdn.net/posa88/article/category/1220695">Hadoop源码解读</a><span>(6)</span>
</li>
<li>
<a href="http://blog.csdn.net/posa88/article/category/1327001">Maven</a><span>(1)</span>
</li>
<li>
<a href="http://blog.csdn.net/posa88/article/category/1333263">mapreduce</a><span>(3)</span>
</li>
<li>
<a href="http://blog.csdn.net/posa88/article/category/1399899">其它工具</a><span>(0)</span>
</li>
<li>
<a href="http://blog.csdn.net/posa88/article/category/1399903">thrift</a><span>(1)</span>
</li>
<li>
<a href="http://blog.csdn.net/posa88/article/category/1400055">mahout</a><span>(1)</span>
</li>
</ul>
</div><div id="panel_Archive" class="panel">
<ul class="panel_head"><span>文章存档</span></ul>
<ul class="panel_body">
<div id="archive_list">
<!--归档统计-->
<li><a href="http://blog.csdn.net/posa88/article/month/2013/08">2013年08月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/posa88/article/month/2013/07">2013年07月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/posa88/article/month/2013/04">2013年04月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/posa88/article/month/2013/01">2013年01月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/posa88/article/month/2012/10">2012年10月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/posa88/article/month/2012/09">2012年09月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/posa88/article/month/2012/08">2012年08月</a><span>(12)</span></li><li><a href="http://blog.csdn.net/posa88/article/month/2012/07">2012年07月</a><span>(1)</span></li>
</div>
</ul>
</div>
<div id="hotarticls" class="panel">
<ul class="panel_head"><span>阅读排行</span></ul>
<ul class="panel_body itemlist">
<li>
<a href="/posa88/article/details/7901304" title="[Hadoop源码解读]（二）MapReduce篇之Mapper类">[Hadoop源码解读]（二）MapReduce篇之Mapper类</a><span>(7163)</span>
</li>
<li>
<a href="/posa88/article/details/7897963" title="[Hadoop源码解读]（一）MapReduce篇之InputFormat">[Hadoop源码解读]（一）MapReduce篇之InputFormat</a><span>(4181)</span>
</li>
<li>
<a href="/posa88/article/details/7906426" title="[Hadoop源码解读]（五）MapReduce篇之Writable相关类">[Hadoop源码解读]（五）MapReduce篇之Writable相关类</a><span>(2976)</span>
</li>
<li>
<a href="/posa88/article/details/8505022" title="Could not resolve archetype org.apache.maven.archetypes:maven-archetype-quickstart">Could not resolve archetype org.apache.maven.archetypes:maven-archetype-quickstart</a><span>(2711)</span>
</li>
<li>
<a href="/posa88/article/details/7956767" title="[Hadoop源码解读]（六）MapReduce篇之MapTask类">[Hadoop源码解读]（六）MapReduce篇之MapTask类</a><span>(1956)</span>
</li>
<li>
<a href="/posa88/article/details/7904720" title="[Hadoop源码解读]（四）MapReduce篇之Counter相关类">[Hadoop源码解读]（四）MapReduce篇之Counter相关类</a><span>(1919)</span>
</li>
<li>
<a href="/posa88/article/details/7870627" title="java.io.IOException: File /home/hadoop/mapred/system/jobtracker.info could only be replicated to 0 n">java.io.IOException: File /home/hadoop/mapred/system/jobtracker.info could only be replicated to 0 n</a><span>(1899)</span>
</li>
<li>
<a href="/posa88/article/details/7870869" title="[Hadoop]使用DistributedCache进行复制联结">[Hadoop]使用DistributedCache进行复制联结</a><span>(1594)</span>
</li>
<li>
<a href="/posa88/article/details/7902709" title="[Hadoop源码解读]（三）MapReduce篇之Job类">[Hadoop源码解读]（三）MapReduce篇之Job类</a><span>(1545)</span>
</li>
<li>
<a href="/posa88/article/details/7880835" title="SEVERE: org.apache.solr.common.SolrException: undefined field text">SEVERE: org.apache.solr.common.SolrException: undefined field text</a><span>(1527)</span>
</li>
</ul>
</div>
<div id="hotarticls2" class="panel">
<ul class="panel_head"><span>评论排行</span></ul>
<ul class="panel_body itemlist">
<li>
<a href="/posa88/article/details/7897963" title="[Hadoop源码解读]（一）MapReduce篇之InputFormat">[Hadoop源码解读]（一）MapReduce篇之InputFormat</a><span>(8)</span>
</li>
<li>
<a href="/posa88/article/details/7870807" title="使用hadoop的datajoin包进行关系型join操作">使用hadoop的datajoin包进行关系型join操作</a><span>(5)</span>
</li>
<li>
<a href="/posa88/article/details/7901304" title="[Hadoop源码解读]（二）MapReduce篇之Mapper类">[Hadoop源码解读]（二）MapReduce篇之Mapper类</a><span>(4)</span>
</li>
<li>
<a href="/posa88/article/details/7853759" title="关系型MapReduce模式：选择、分组和组内排序">关系型MapReduce模式：选择、分组和组内排序</a><span>(2)</span>
</li>
<li>
<a href="/posa88/article/details/8505022" title="Could not resolve archetype org.apache.maven.archetypes:maven-archetype-quickstart">Could not resolve archetype org.apache.maven.archetypes:maven-archetype-quickstart</a><span>(2)</span>
</li>
<li>
<a href="/posa88/article/details/8130774" title="MapReduce程序的测试--MRUnit">MapReduce程序的测试--MRUnit</a><span>(1)</span>
</li>
<li>
<a href="/posa88/article/details/7906426" title="[Hadoop源码解读]（五）MapReduce篇之Writable相关类">[Hadoop源码解读]（五）MapReduce篇之Writable相关类</a><span>(1)</span>
</li>
<li>
<a href="/posa88/article/details/8516612" title="mapreduce编程(一）：输入文件的过滤">mapreduce编程(一）：输入文件的过滤</a><span>(0)</span>
</li>
<li>
<a href="/posa88/article/details/8534230" title="Pangool:行走在mapreduce之上">Pangool:行走在mapreduce之上</a><span>(0)</span>
</li>
<li>
<a href="/posa88/article/details/8556992" title="mapreduce作业调优tips">mapreduce作业调优tips</a><span>(0)</span>
</li>
</ul>
</div>
<div id="homepageArticles" class="panel tracking-ad" data-mod="popu_4">
<ul class="panel_head"><span>推荐文章</span></ul>
<ul class="panel_body" id="ad_commend"></ul>
</div>
<script type="text/javascript">
 new Ad(12, 'ad_commend');
</script><div id="newcomments" class="panel">
<ul class="panel_head"><span>最新评论</span></ul>
<ul class="panel_body itemlist">
    <li>
    <a href="/posa88/article/details/7897963#comments">[Hadoop源码解读]（一）MapReduce篇之InputFormat</a>
    <p style="margin:0px;"><a href="/wangqiaoshi" class="user_name">wangqiaoshi</a>:
你好，我想测试KeyValueTextInputFormat是怎么个读取方式，我该怎么测试，hado...
    </p>
    </li>
    <li>
    <a href="/posa88/article/details/7870807#comments">使用hadoop的datajoin包进行关系型join操作</a>
    <p style="margin:0px;"><a href="/bo_hai" class="user_name">bo_hai</a>:
运行的参数怎么样传递呢？
    </p>
    </li>
    <li>
    <a href="/posa88/article/details/7897963#comments">[Hadoop源码解读]（一）MapReduce篇之InputFormat</a>
    <p style="margin:0px;"><a href="/JimmyLincole" class="user_name">JimmyLincole</a>:
感觉像是看天书，看了好多遍了，难道是我学习的方法不对？？该如何学习源码的分析呢？
    </p>
    </li>
    <li>
    <a href="/posa88/article/details/7897963#comments">[Hadoop源码解读]（一）MapReduce篇之InputFormat</a>
    <p style="margin:0px;"><a href="/lihm0_1" class="user_name">lihm0_1</a>:
@zhouleilei:每个InputFormat都会包装不同的RecordReader，单独分析L...
    </p>
    </li>
    <li>
    <a href="/posa88/article/details/8505022#comments">Could not resolve archetype org.apache.maven.archetypes:maven-archetype-quickstart</a>
    <p style="margin:0px;"><a href="/kutekute" class="user_name">kutekute</a>:
@zhj651430918:因为，mvn是maven的命令，你没有在path中配置maven的路径
    </p>
    </li>
    <li>
    <a href="/posa88/article/details/8130774#comments">MapReduce程序的测试--MRUnit</a>
    <p style="margin:0px;"><a href="/mal39" class="user_name">mal39</a>:
Turtorial 确实写错了
    </p>
    </li>
    <li>
    <a href="/posa88/article/details/7870807#comments">使用hadoop的datajoin包进行关系型join操作</a>
    <p style="margin:0px;"><a href="/crazyzhb2012" class="user_name">crazyzhb2012</a>:
哦，我发现我的项目中没有自动导入hadoop-0.20.2-datajoin.jar这个包，导入后就...
    </p>
    </li>
    <li>
    <a href="/posa88/article/details/7870807#comments">使用hadoop的datajoin包进行关系型join操作</a>
    <p style="margin:0px;"><a href="/crazyzhb2012" class="user_name">crazyzhb2012</a>:
你好，我的程序导入import org.apache.hadoop.contrib.utils.jo...
    </p>
    </li>
    <li>
    <a href="/posa88/article/details/7897963#comments">[Hadoop源码解读]（一）MapReduce篇之InputFormat</a>
    <p style="margin:0px;"><a href="/zhouleilei" class="user_name">zhouleilei</a>:
分析的不详细，比如在LineRecordReader类的解读上，一笔带过，没有解释大体流程，我能看懂...
    </p>
    </li>
    <li>
    <a href="/posa88/article/details/7897963#comments">[Hadoop源码解读]（一）MapReduce篇之InputFormat</a>
    <p style="margin:0px;"><a href="/sggys" class="user_name">sggys</a>:
分析的详细啊，学习。
    </p>
    </li>
</ul>
</div>
    </div>
    <div class="clear">
    </div>
</div>

            <div class="clear">
            </div>
        </div>
        

<script type="text/javascript" src="http://static.blog.csdn.net/scripts/newblog.min.js"></script>
<script type="text/javascript" src="http://medal.blog.csdn.net/showblogmedal.ashx?blogid=664827"></script>
<script type="text/javascript">
    document.write('<script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/publib_footer.js?' + Math.floor(new Date() / 120000).toString(36) + '="></' + 'script>');
</script>
    <script type="text/javascript" src="http://passport.csdn.net/content/loginbox/login.js"></script>
<script type="text/javascript">document.write("<img src=http://counter.csdn.net/pv.aspx?id=24 border=0 width=0 height=0>");</script>
<script type="text/javascript" src="http://www.csdn.net/ui/scripts/Csdn/counter.js"></script>
<script type="text/javascript" src="http://ad.csdn.net/scripts/ad-blog.js"></script>
<script type="text/javascript" src="http://zz.csdn.net/js/count.js"></script>
<script type="text/javascript">
    $(function () {
        function __get_code_toolbar(snippet_id) {
            return $("<a href='https://code.csdn.net/snippets/"
                    + snippet_id
                    + "' target='_blank' title='在CODE上查看代码片' style='text-indent:0;'><img src='https://code.csdn.net/assets/CODE_ico.png' width=12 height=12 alt='在CODE上查看代码片' style='position:relative;top:1px;left:2px;'/></a>"
                    + "<a href='https://code.csdn.net/snippets/"
                    + snippet_id
                    + "/fork' target='_blank' title='派生到我的代码片'  style='text-indent:0;'><img src='https://code.csdn.net/assets/ico_fork.svg' width=12 height=12 alt='派生到我的代码片' style='position:relative;top:2px;left:2px;'/></a>");
        }
        
        $("[code_snippet_id]").each(function () {
            __s_id = $(this).attr("code_snippet_id");
            if (__s_id != null && __s_id != "" && __s_id != 0 && parseInt(__s_id) > 70020) {
                __code_tool = __get_code_toolbar(__s_id);
                $(this).prev().find(".tools").append(__code_tool);
            }
        });
    });
</script>

    </div>
      <!--new top-->
    
    <script id="csdn-toolbar-id" btnId="header_notice_num" wrapId="note1" count="5" subCount="5" type="text/javascript" src="http://static.csdn.net/public/common/toolbar/js/toolbar.js"></script>     <!--new top-->
</body>
</html>
